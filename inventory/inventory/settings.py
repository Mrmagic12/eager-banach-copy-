"""
Django settings for inventory project.

Generated by 'djangocms' command using django CMS 4.1.0 and Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of Django settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/

For the list of django CMS settings and their values, see
https://docs.django-cms.org/en/release-4.1.x/reference/configuration.html
"""

import os
from pathlib import Path

from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-5d@gwyyhvg-uf=z2x5ics55hm=^&#=px+l-i@49=(&)o473bn("

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['pnrdp6-8000.csb.app', '34429d82-7df4-4a1e-b310-ec822ff338aa-00-whqoklrvw82m.spock.replit.dev', '2ba33202-f6d4-4903-9fe1-a1c849c4dbda-00-3fzuypfd5alil.pike.replit.dev', '2ba33202-f6d4-4903-9fe1-a1c849c4dbda-00-3fzuypfd5alil.pike.replit.dev', '28d65abc-8bd2-417f-afea-464b0441f12e-00-1cc49z84jpayk.pike.replit.dev', '28d65abc-8bd2-417f-afea-464b0441f12e-00-1cc49z84jpayk.pike.replit.dev', '4e365af9-9759-4181-9988-8bd926a5d297-00-159a4gk0omqrt.sisko.replit.dev']

ALDRYN_BOILERPLATE_NAME='bootstrap3'

CSRF_FAILUER_VIEW = 'myapp.views.my_csrf_failure_view'

CSRF_TRUSTED_SECURE = True

CSRF_TRUSTED_ORIGINS = ['https://28d65abc-8bd2-417f-afea-464b0441f12e-00-1cc49z84jpayk.pike.replit.dev:3001/', 'https://28d65abc-8bd2-417f-afea-464b0441f12e-00-1cc49z84jpayk.pike.replit.dev:3001', 'https://4e365af9-9759-4181-9988-8bd926a5d297-00-159a4gk0omqrt.sisko.replit.dev:3001', 'https://4e365af9-9759-4181-9988-8bd926a5d297-00-159a4gk0omqrt.sisko.replit.dev:3001']

CORS_ALLOW_ALL_ORIGINS = True

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

DJANGOCMS_SNIPPET_SEARCH = True

CMS_TEMPLATES = [
    ('home.html', 'Home page template'),
]

CMS_COLOR_SCHEMES = [
    ('default', 'Default'),
    ('dark', 'Dark'),
    ('light', 'Light'),
    ('pink', 'Pink')
]

CMS_COLOR_SCHEME_TOGGLE = True

DJANGOCMS_SNIPPET_THEME = 'github'
DJANGOCMS_SNIPPET_MODE = 'html'

DJANGOCMS_ICON_TEMPLATES = [
    ('svg', 'SVG template'),
]


DJANGOCMS_PICTURE_TEMPLATES = [
    ('background', _('Background image')),
    ('custom_image_template', _('Custom image template'))
]

DJANGOCMS_PICTURE_ALIGN = [        
    ('left', _('Align left')),
    ('right', _('Align right')),
    ('center', _('Align center')),
    ("start", _("Float left")),            
    ("end", _("Float right")),
    ('top', _('Align top')),
    ('middle', _('Align middle')),
    ('bottom', _('Align Bottom')),
    ('baseline', _('Align baseline')),           
]

DJANGOCMS_PICTURE_NESTING = True

DJANGOCMS_STYLE_CHOICES = ['container', 'content', 'teaser']

DJANGOCMS_STYLE_TEMPLATES = [
    ('feature', _('Feature')),
    ('blogs', _('Blogs')),
    ('footer', _('Footer')),
    ('card', _('Card')),
    ('language', _('Language')),
    ('container', _('Container')),
    ('table', _('Table')),
]

DJANGOCMS_ICON_TEMPLATES = [
    ('svg', 'SVG template'),
]

DJANGOCMS_FORMS_USE_HTML5_REQUIRED = False

DJANGOCMS_FORMS_PLUGIN_MODULE = _('Generic')

DJANGOCMS_FORMS_PLUGIN_NAME = _('Form')

DJANGOCMS_FORMS_DEFAULT_TEMPLATE = 'djangocms_forms/form_template/default.html'

DJANGOCMS_FORMS_TEMPLATES = (
    ('djangocms_forms/form_template/default.html', _('Default')),
)

DJANGOCMS_FORMS_WIDGET_CSS_CLASSES = {'__all__': ('form-control', ) }

DJANGOCMS_FORMS_PLUGIN_NAME = _('Form')

DJANGOCMS_FORMS_PLUGIN_MODULE = _('Generic')

DJANGOCMS_ICON_SETS = [
  ('fontawesome5regular', 'far', 'Font Awesome 5 Regular', 'lastest'),
  ('fontawesome5solid', 'fas', 'Font Awesome 5 Solid', 'lastest'),
  ('fontawesome5brands', 'fab', 'Font Awesome 5 Brands', 'lastest'),
  ('elusiveicon', 'el', 'Elusive Icons'),
  ('flagicon', 'flag-icon', 'Flag Icons'),
  ('fontawesome5regular', 'far', 'Font Awesome 5 Regular'),
  ('fontawesome5solid', 'fas', 'Font Awesome 5 Solid'),
  ('fontawesome5brands', 'fab', 'Font Awesome 5 Brands'),
  ('fontawesome5light', 'fal', 'Font Awesome 5 Light', '5.3.1_pro'),
  ('glyphicon', 'glyphicon', 'Glyphicons'),
  ('ionicon', 'ion', 'Ionicons Icons'),
  ('mapicon', 'map-icon', 'Map Icons'),
  ('materialdesign', 'zmdi', 'Material Design'),
  ('octicon', 'octicon', 'Octicons'),
  ('typicon', 'typcn', 'Typicons'),
  ('weathericon', 'wi', 'Weather Icons'),
  ('fontawesome4', 'fa', 'Font Awesome 4', '4.0.0'),
  ('fontawesome5light', 'fal', 'Font Awesome 5 Light', '5.3.1_pro'),
  {'hear', 'fas', 'fontawesome'}
]

DJANGOCMS_STYLE_TAGS = ['div', 'article', 'section', 'header', 'footer',
  'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'span', 'p', 'a', 'img', 'ul', 'ol','li', 'table', 'tr', 'td', 'th', 'div', 'blockquote', 'pre','code', 'hr', 'br', 'b', 'strong', 'i', 'em', 'small','figure','figcaption','colgroup','col','table','thead','tbody','tfoot','caption','abbr','acronym','address','bdo','cite','code']

CSRF_COOKIE_HTTPONLY = True

CMS_ENABLE_UPDATE_CHECK = False

CMS_UPDATE_CHECK_TYPE = ('patch')

CKEDITOR_SETTINGS = {
    'language': '{{ language }}',
    'toolbar_HTMLField': [
        ['Undo', 'Redo'],
        ['ShowBlocks'],
        ['Format', 'Styles'],
    ],
    'skin': 'moono-lisa',
}
# Application definition

INSTALLED_APPS = [
  "adminsortable",
  "aldryn_boilerplates",
  "django.contrib.admin",
  "djangocms_admin_style",
  "django.contrib.auth",
  "django.contrib.contenttypes",
  "django.contrib.sessions",
  "django.contrib.messages",
  "django.contrib.staticfiles",
  "django.contrib.sites",
  "django.contrib.sitemaps",
  "djangocms_page_sitemap",
  "django_select2",
  "salesforce",
    # CMS base apps
  "cms",
  "menus",
  "djangocms_attributes_field",
  "djangocms_text_ckeditor",
  "djangocms_alias",
  "djangocms_style",
  "djangocms_versioning",
  "djangocms_file",
  "djangocms_snippet",
  "djangocms_icon",
  "django_jsonfield_backport",
  "sekizai",
  "treebeard",
  "parler",
  "filer",
  "easy_thumbnails",
  "djangocms_frontend",
  "djangocms_frontend.contrib.accordion",
  "djangocms_frontend.contrib.alert",
  "djangocms_frontend.contrib.badge",
  "djangocms_frontend.contrib.card",
  "djangocms_frontend.contrib.carousel",
  "djangocms_frontend.contrib.collapse",
  "djangocms_frontend.contrib.content",
  "djangocms_frontend.contrib.grid",
  "djangocms_frontend.contrib.icon",
  "djangocms_frontend.contrib.image",
  "djangocms_frontend.contrib.jumbotron",
  "djangocms_frontend.contrib.link",
  "djangocms_frontend.contrib.listgroup",
  "djangocms_frontend.contrib.media",
  "djangocms_frontend.contrib.navigation",
  "djangocms_frontend.contrib.tabs",
  "djangocms_frontend.contrib.utilities",
  "crispy_forms",
  "crispy_bootstrap5"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "cms.middleware.user.CurrentUserMiddleware",
    "cms.middleware.page.CurrentPageMiddleware",
    "cms.middleware.toolbar.ToolbarMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "cms.middleware.language.LanguageCookieMiddleware",
]

ROOT_URLCONF = "inventory.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "inventory", "templates"),
        ],
        "APP_DIRS": False,
          "OPTIONS": {
            "context_processors": [
              "django.template.context_processors.debug",
              "django.template.context_processors.request",
              "django.template.context_processors.i18n",
              "django.contrib.auth.context_processors.auth",
              "django.contrib.messages.context_processors.messages",
              "sekizai.context_processors.sekizai",
              "cms.context_processors.cms_settings",
              "aldryn_boilerplates.context_processors.boilerplate",
              "django.template.context_processors.static"
            ],
          "loaders": [
            "django.template.loaders.filesystem.Loader",
            "aldryn_boilerplates.template_loaders.AppDirectoriesLoader",
            "django.template.loaders.app_directories.Loader"
          ]
        },
    },
]
DJANGOCMS_PLUGIN_TABLE_CONTENTS_ENABLED = True
DJANGOCMS_PLUGIN_TABLE_CONTENTS_TITLE = 'Table of Contents'
DJANGOCMS_PLUGIN_TABLE_CONTENTS_MIN_HEADINGS = 3

DJANGOCMS_FILE_TEMPLATES = [
    ('feature', _('Feature Version')),
]

DJANGOCMS_ICON_TEMPLATES = [
    ('svg', 'SVG template'),
]

DJANGOCMS_ICON_SETS = [
  ('fontawesome5regular', 'far', 'Font Awesome 5 Regular', 'lastest'),
  ('fontawesome5solid', 'fas', 'Font Awesome 5 Solid', 'lastest'),
  ('fontawesome5brands', 'fab', 'Font Awesome 5 Brands', 'lastest'),
  ('elusiveicon', 'el', 'Elusive Icons'),
  ('flagicon', 'flag-icon', 'Flag Icons'),
  ('fontawesome5regular', 'far', 'Font Awesome 5 Regular'),
  ('fontawesome5solid', 'fas', 'Font Awesome 5 Solid'),
  ('fontawesome5brands', 'fab', 'Font Awesome 5 Brands'),
  ('fontawesome5light', 'fal', 'Font Awesome 5 Light', '5.3.1_pro'),
  ('glyphicon', 'glyphicon', 'Glyphicons'),
  ('ionicon', 'ion', 'Ionicons Icons'),
  ('mapicon', 'map-icon', 'Map Icons'),
  ('materialdesign', 'zmdi', 'Material Design'),
  ('octicon', 'octicon', 'Octicons'),
  ('typicon', 'typcn', 'Typicons'),
  ('weathericon', 'wi', 'Weather Icons'),
]

DJANGOCMS_PICTURE_TEMPLATES = [
    ('background', _('Background image')),
    ('custom image', _('Custom image template'))
]

DJANGOCMS_PICTURE_ALIGN = [
    ('left', _('Align left')),
    ('right', _('Align right')),
    ('center', _('Align center')),
    # Image float alignment options
    ("start", _("Float left")),
    ("end", _("Float right")),
    # Vertical alignment options
    ('top', _('Align top')),
    ('middle', _('Align middle')),
    ('bottom', _('Align Bottom')),
    ('baseline', _('Align baseline')),
]

DJANGOCMS_PICTURE_NESTING = True


THUMBNAIL_PROCESSORS = (
    "easy_thumbnails.processors.colorspace",
    "easy_thumbnails.processors.autocrop",
    "filer.thumbnail_processors.scale_and_crop_with_subject_location",
    "easy_thumbnails.processors.filters",
)

META_SITE_PROTOCOL = 'https'
META_USE_SITES = True
WSGI_APPLICATION = "inventory.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en"

LANGUAGES = [
    ("en", _("English")),
    ("fr", _("French")),
    ("es", _("Spanish")),
    ("de", _("German")),
    ("it", _("Italian")),
    ("ja", _("Japanese")),
    ("ko", _("Korean")),
    ("ru", _("Russian")),
    ("zh-hans", _("Simplified Chinese")),
    ("zh-hant", _("Traditional Chinese")),
    ("pt-br", _("Brazilian Portuguese")),
    ("pl", _("Polish")),
    ("nl", _("Dutch")),
    ("tr", _("Turkish")),
    ("sv", _("Swedish")),
    ("uk", _("Ukrainian")),
    ("vi", _("Vietnamese")),
    ("fa", _("Persian")),
    ("hi", _("Hindi")),
    ("bn", _("Bengali")),
    ("mr", _("Marathi")),
    ("ta", _("Tamil")),
    ("te", _("Telugu")),
    ("th", _("Thai")),
    ("fil", _("Filipino"))
]

TIME_ZONE = "UTC"

USE_I18N = True
USE_L10N = True
USE_THOUSAND_SEPARATOR = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

# This is a django CMS 4 template

CMS_CONFIRM_VERSION4 = True

ROOT_URLCONF = "inventory.urls"

# django CMS requires the site framework
# https://docs.django-cms.org/en/release-4.1.x/how_to/multi-site.html

SITE_ID = 1

# A base template is part of this setup
# https://docs.django-cms.org/en/release-4.1.x/reference/configuration.html#cms-templates

CMS_TEMPLATES = (
    ("base.html", _("Standard")),
    ("custombase.html", _("Custom base template")),
    ('login.html', _("[Login]")),
    ("container.html", _("[Container]"))
)

# Enable permissions
# https://docs.django-cms.org/en/release-4.1.x/topics/permissions.html

CMS_PERMISSION = True

# Allow admin sidebar to open admin URLs

X_FRAME_OPTIONS = "SAMEORIGIN"

# Enable inline editing with djangocms-text-ckeditor
# https://github.com/django-cms/djangocms-text-ckeditor#inline-editing-feature

TEXT_INLINE_EDITING = True

# Add project-wide static files directory
# https://docs.djangoproject.com/en/4.2/ref/settings/#staticfiles-dirs

STATICFILES_DIRS = [
    BASE_DIR / "inventory" / "static",
]

INTERNAL_IPS = [
    "127.0.0.1",
]

# Add project-wide static files directory
# https://docs.djangoproject.com/en/4.2/ref/settings/#media-root

MEDIA_URL = "media/"
MEDIA_ROOT = str(BASE_DIR.parent / "media")
